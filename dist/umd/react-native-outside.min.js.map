{"version":3,"file":"react-native-outside.min.js","sources":["../../src/ActiveBoundary.ts","../../src/Active.ts"],"sourcesContent":["import { Children, Fragment, cloneElement, createElement, isValidElement, useState } from 'react';\nimport type { Dispatch, FC, ReactElement, ReactNode, RefObject } from 'react';\nimport contains from 'react-native-contains';\nimport { useEvent } from 'react-native-event';\nimport { BoundaryProvider, useBoundary, useRef } from 'react-ref-boundary';\n\nfunction Component({ children, isActive, setIsActive }) {\n  const ref = useRef<HTMLElement>(null);\n  const boundary = useBoundary();\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      for (let i = 0; i < boundary.refs.length; i++) {\n        const x = boundary.refs[i] as RefObject<HTMLElement>;\n        if (x.current && contains(x.current, event.target)) return;\n      }\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n\ninterface ComponentProps {\n  isActive: boolean;\n  setIsActive: Dispatch<boolean>;\n}\n\nexport default function ActiveBoundary({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n\n  return createElement(BoundaryProvider, null, createElement<ComponentProps>(Component as FC, { isActive, setIsActive }, children));\n}\n","import { Children, Fragment, cloneElement, createElement, isValidElement, useRef, useState } from 'react';\nimport type { ReactElement, ReactNode } from 'react';\nimport contains from 'react-native-contains';\nimport { useEvent } from 'react-native-event';\n\nexport default function Active({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n  const ref = useRef<HTMLElement>(null);\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      if (ref.current && contains(ref.current, event.target)) return;\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n"],"names":["Component","param","children","isActive","setIsActive","ref","useRef","boundary","useBoundary","useEvent","event","i","refs","length","x","current","contains","target","createElement","Fragment","Children","map","child","isValidElement","cloneElement","state","useState","BoundaryProvider"],"mappings":"8fAMA,SAASA,EAAUC,GAAEC,IAAAA,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,SAAUC,EAAtBH,EAAsBG,YACjCC,EAAMC,SAAoB,MAC1BC,EAAWC,EAAAA,cAajB,OAZAC,EAAAA,UACE,SAACC,GACC,GAAKP,EAAL,CACA,IAAK,IAAIQ,EAAI,EAAGA,EAAIJ,EAASK,KAAKC,OAAQF,IAAK,CAC7C,IAAMG,EAAIP,EAASK,KAAKD,GACxB,GAAIG,EAAEC,SAAWC,EAASF,EAAEC,QAASL,EAAMO,QAAS,MACtD,CACAb,GAAY,EALG,IAOjB,CAACD,EAAUC,IAGNc,EAAAA,cACLC,EAAAA,SACA,KACAC,WAASC,IAA0BnB,GAAU,SAACoB,UAC5CC,iBAAeD,GAEXE,EAAAA,aAAaF,EAA4B,CACvCnB,SAAAA,EACAC,YAAAA,EACAC,IAAAA,IAEFiB,KAGV,UC9Be,SAAgBrB,GAAA,IAAEC,EAAFD,EAAEC,SACzBuB,EAAQC,YAAkB,GAC1BvB,EAAWsB,EAAM,GACjBrB,EAAcqB,EAAM,GACpBpB,EAAMC,SAAoB,MAUhC,OATAG,EAAAA,UACE,SAACC,GACMP,IACDE,EAAIU,SAAWC,EAASX,EAAIU,QAASL,EAAMO,SAC/Cb,GAAY,MAEd,CAACD,EAAUC,IAGNc,EAAAA,cACLC,EAAAA,SACA,KACAC,WAASC,IAA0BnB,GAAU,SAACoB,UAC5CC,iBAAeD,GAEXE,EAAAA,aAAaF,EAA4B,CACvCnB,SAAAA,EACAC,YAAAA,EACAC,IAAAA,IAEFiB,KAGV,mBDSe,SAAwBrB,GAAA,IAAEC,EAAFD,EAAEC,SACjCuB,EAAQC,YAAkB,GAC1BvB,EAAWsB,EAAM,GACjBrB,EAAcqB,EAAM,GAE1B,OAAOP,EAAcS,cAAAA,EAAAA,iBAAkB,KAAMT,EAAAA,cAA8BlB,EAAiB,CAAEG,SAAAA,EAAUC,YAAAA,GAAeF,GACzH"}