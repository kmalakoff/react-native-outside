{"version":3,"file":"react-native-outside.js","sources":["../../src/ActiveBoundary.ts","../../src/Active.ts"],"sourcesContent":["import { Children, Fragment, cloneElement, createElement, isValidElement, useState } from 'react';\nimport type { Dispatch, FC, ReactElement, ReactNode, RefObject } from 'react';\nimport contains from 'react-native-contains';\nimport { useEvent } from 'react-native-event';\nimport { BoundaryProvider, useBoundary, useRef } from 'react-ref-boundary';\n\nfunction Component({ children, isActive, setIsActive }) {\n  const ref = useRef<HTMLElement>(null);\n  const boundary = useBoundary();\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      for (let i = 0; i < boundary.refs.length; i++) {\n        const x = boundary.refs[i] as RefObject<HTMLElement>;\n        if (x.current && contains(x.current, event.target)) return;\n      }\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n\ninterface ComponentProps {\n  isActive: boolean;\n  setIsActive: Dispatch<boolean>;\n}\n\nexport default function ActiveBoundary({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n\n  return createElement(BoundaryProvider, null, createElement<ComponentProps>(Component as FC, { isActive, setIsActive }, children));\n}\n","import { Children, Fragment, cloneElement, createElement, isValidElement, useRef, useState } from 'react';\nimport type { ReactElement, ReactNode } from 'react';\nimport contains from 'react-native-contains';\nimport { useEvent } from 'react-native-event';\n\nexport default function Active({ children }) {\n  const state = useState<boolean>(false);\n  const isActive = state[0];\n  const setIsActive = state[1];\n  const ref = useRef<HTMLElement>(null);\n  useEvent(\n    (event) => {\n      if (!isActive) return;\n      if (ref.current && contains(ref.current, event.target)) return;\n      setIsActive(false);\n    },\n    [isActive, setIsActive]\n  );\n\n  return createElement(\n    Fragment,\n    null,\n    Children.map<ReactNode, ReactNode>(children, (child) =>\n      isValidElement(child)\n        ? // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n          cloneElement(child as ReactElement<any>, {\n            isActive,\n            setIsActive,\n            ref,\n          })\n        : child\n    )\n  );\n}\n"],"names":["Component","children","isActive","setIsActive","ref","useRef","boundary","useBoundary","useEvent","event","i","refs","length","x","current","contains","target","createElement","Fragment","Children","map","child","isValidElement","cloneElement","ActiveBoundary","state","useState","BoundaryProvider","Active"],"mappings":"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"}